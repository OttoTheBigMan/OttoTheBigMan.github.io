import{S as os,i as es,s as cs,k as p,q as u,a as e,l as o,m as c,r as i,h as s,c as l,n as Gn,D as ls,b as t,F as k,L as In}from"./index.15b34a9b.js";function us(as){let r,cn,N,v,ln,R,y,un,J,b,kn,T,d,rn,V,_,fn,B,C,mn,W,E,vn,z,j,yn,O,w,bn,Q,P,dn,U,x,_n,X,F,Cn,Y,H,En,Z,M,jn,$,S,wn,h,L,Pn,g,G,xn,nn,I,Fn,sn,D,Hn,an,A,Mn,tn,K,Sn,pn,f,ts=`<code class="language-js"><span class="token keyword">let</span> cardIsMoving <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> currentCard <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> closestCard <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token keyword">function</span> <span class="token function">MoveCard</span><span class="token punctuation">(</span><span class="token parameter">i<span class="token punctuation">,</span> j</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>lists<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>cards<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>moving <span class="token operator">!=</span> cardIsMoving<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>lists<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>cards<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>moving<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token function">cardAdded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        lists<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>cards<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>moving <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token function">GenerateListPositions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> listPositions<span class="token punctuation">.</span>length<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            listPositions<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token function">GetElementWidth</span><span class="token punctuation">(</span>listElements<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        currentCard <span class="token operator">=</span> <span class="token punctuation">[</span>i<span class="token punctuation">,</span> j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        cardIsMoving <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

        lists<span class="token punctuation">[</span>currentCard<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>elements<span class="token punctuation">[</span>currentCard<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> mouse<span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">;</span>
        lists<span class="token punctuation">[</span>currentCard<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>elements<span class="token punctuation">[</span>currentCard<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> mouse<span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">;</span>

        closestCard<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">GetClosestIndexInArray</span><span class="token punctuation">(</span>mouse<span class="token punctuation">.</span>x<span class="token punctuation">,</span> listPositions<span class="token punctuation">)</span>
        <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> lists<span class="token punctuation">[</span>closestCard<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>elements<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>lists<span class="token punctuation">[</span>closestCard<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>elements<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"movingCard"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>lists<span class="token punctuation">[</span>closestCard<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>elements<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">GetTopValue</span><span class="token punctuation">(</span>lists<span class="token punctuation">[</span>closestCard<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>elements<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>lists<span class="token punctuation">[</span>closestCard<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>elements<span class="token punctuation">.</span>length <span class="token operator">-</span> i <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">GetBottomValue</span><span class="token punctuation">(</span>lists<span class="token punctuation">[</span>closestCard<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>elements<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">)</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a <span class="token operator">-</span> b<span class="token punctuation">)</span>
        closestCard<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">GetClosestIndexInArray</span><span class="token punctuation">(</span>mouse<span class="token punctuation">.</span>y<span class="token punctuation">,</span> arr<span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>lists<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>cards<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>moving<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
        <span class="token comment">//Snap it to the closest card position.</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span>deleteCardHover<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
            <span class="token function">DeleteCard</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        lists<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>cards<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>moving <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        cardIsMoving <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> el <span class="token operator">=</span> lists<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>cards<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        lists<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>cards <span class="token operator">=</span> lists<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>cards
        lists<span class="token punctuation">[</span>closestCard<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>cards<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>closestCard<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">...</span>el<span class="token punctuation">)</span>
        lists<span class="token punctuation">[</span>closestCard<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>cards <span class="token operator">=</span> lists<span class="token punctuation">[</span>closestCard<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>cards<span class="token punctuation">;</span>
        lists <span class="token operator">=</span> lists<span class="token punctuation">;</span>
        currentCard <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token punctuation">&#125;</span>
    
<span class="token punctuation">&#125;</span></code>`,on,q,Ln,en,m,Dn;return{c(){r=p("h1"),cn=u("Coola features:"),N=e(),v=p("p"),ln=u("Just nu har jag fixat ett system där man kan göra flera listor med små kort som kan innehålla text, en bild eller en länk. Man kan flytta runt de här korten i listorna och från en lista till en annan. Det är också möjligt att skapa nya kort och ta bort kort. Listor går också att ta bort och flytta runt."),R=e(),y=p("h1"),un=u("Coola featurs igen 😐:"),J=e(),b=p("h3"),kn=u("Nödvändiga features"),T=e(),d=p("p"),rn=u("✅Göra todo-listor och grejer inuti dem."),V=e(),_=p("p"),fn=u("✅Flytta grejer mellan listor."),B=e(),C=p("p"),mn=u("✅Flytta listor"),W=e(),E=p("p"),vn=u("❌Save / Load"),z=e(),j=p("p"),yn=u("✅Skapa nya kort"),O=e(),w=p("p"),bn=u("❌Skapa nya listor"),Q=e(),P=p("h3"),dn=u("Mindre kritiska features"),U=e(),x=p("p"),_n=u("✅Kunna skicka in bilder i listorna"),X=e(),F=p("p"),Cn=u("✅Kunna ha länkar i listorna"),Y=e(),H=p("h3"),En=u("Features jag vill göra i mån om tid"),Z=e(),M=p("p"),jn=u("❌Flera tavlor."),$=e(),S=p("p"),wn=u("❌Redigera kort / listor"),h=e(),L=p("p"),Pn=u("❌Flera color-themes."),g=e(),G=p("h3"),xn=u("Features jag gör om jag varit on the grind"),nn=e(),I=p("p"),Fn=u("❌3d animations😎"),sn=e(),D=p("h1"),Hn=u("Annan info:"),an=e(),A=p("p"),Mn=u("Dokumenterat den 20 / 4 - 2023"),tn=e(),K=p("h1"),Sn=u("Lite source code:"),pn=e(),f=p("pre"),on=e(),q=p("h1"),Ln=u("Screenshot"),en=e(),m=p("img"),this.h()},l(n){r=o(n,"H1",{});var a=c(r);cn=i(a,"Coola features:"),a.forEach(s),N=l(n),v=o(n,"P",{});var An=c(v);ln=i(An,"Just nu har jag fixat ett system där man kan göra flera listor med små kort som kan innehålla text, en bild eller en länk. Man kan flytta runt de här korten i listorna och från en lista till en annan. Det är också möjligt att skapa nya kort och ta bort kort. Listor går också att ta bort och flytta runt."),An.forEach(s),R=l(n),y=o(n,"H1",{});var Kn=c(y);un=i(Kn,"Coola featurs igen 😐:"),Kn.forEach(s),J=l(n),b=o(n,"H3",{});var qn=c(b);kn=i(qn,"Nödvändiga features"),qn.forEach(s),T=l(n),d=o(n,"P",{});var Nn=c(d);rn=i(Nn,"✅Göra todo-listor och grejer inuti dem."),Nn.forEach(s),V=l(n),_=o(n,"P",{});var Rn=c(_);fn=i(Rn,"✅Flytta grejer mellan listor."),Rn.forEach(s),B=l(n),C=o(n,"P",{});var Jn=c(C);mn=i(Jn,"✅Flytta listor"),Jn.forEach(s),W=l(n),E=o(n,"P",{});var Tn=c(E);vn=i(Tn,"❌Save / Load"),Tn.forEach(s),z=l(n),j=o(n,"P",{});var Vn=c(j);yn=i(Vn,"✅Skapa nya kort"),Vn.forEach(s),O=l(n),w=o(n,"P",{});var Bn=c(w);bn=i(Bn,"❌Skapa nya listor"),Bn.forEach(s),Q=l(n),P=o(n,"H3",{});var Wn=c(P);dn=i(Wn,"Mindre kritiska features"),Wn.forEach(s),U=l(n),x=o(n,"P",{});var zn=c(x);_n=i(zn,"✅Kunna skicka in bilder i listorna"),zn.forEach(s),X=l(n),F=o(n,"P",{});var On=c(F);Cn=i(On,"✅Kunna ha länkar i listorna"),On.forEach(s),Y=l(n),H=o(n,"H3",{});var Qn=c(H);En=i(Qn,"Features jag vill göra i mån om tid"),Qn.forEach(s),Z=l(n),M=o(n,"P",{});var Un=c(M);jn=i(Un,"❌Flera tavlor."),Un.forEach(s),$=l(n),S=o(n,"P",{});var Xn=c(S);wn=i(Xn,"❌Redigera kort / listor"),Xn.forEach(s),h=l(n),L=o(n,"P",{});var Yn=c(L);Pn=i(Yn,"❌Flera color-themes."),Yn.forEach(s),g=l(n),G=o(n,"H3",{});var Zn=c(G);xn=i(Zn,"Features jag gör om jag varit on the grind"),Zn.forEach(s),nn=l(n),I=o(n,"P",{});var $n=c(I);Fn=i($n,"❌3d animations😎"),$n.forEach(s),sn=l(n),D=o(n,"H1",{});var hn=c(D);Hn=i(hn,"Annan info:"),hn.forEach(s),an=l(n),A=o(n,"P",{});var gn=c(A);Mn=i(gn,"Dokumenterat den 20 / 4 - 2023"),gn.forEach(s),tn=l(n),K=o(n,"H1",{});var ns=c(K);Sn=i(ns,"Lite source code:"),ns.forEach(s),pn=l(n),f=o(n,"PRE",{class:!0});var ps=c(f);ps.forEach(s),on=l(n),q=o(n,"H1",{});var ss=c(q);Ln=i(ss,"Screenshot"),ss.forEach(s),en=l(n),m=o(n,"IMG",{src:!0,alt:!0}),this.h()},h(){Gn(f,"class","language-js"),ls(m.src,Dn="/not-trello-screenshot-1.png")||Gn(m,"src",Dn),Gn(m,"alt","waltuh")},m(n,a){t(n,r,a),k(r,cn),t(n,N,a),t(n,v,a),k(v,ln),t(n,R,a),t(n,y,a),k(y,un),t(n,J,a),t(n,b,a),k(b,kn),t(n,T,a),t(n,d,a),k(d,rn),t(n,V,a),t(n,_,a),k(_,fn),t(n,B,a),t(n,C,a),k(C,mn),t(n,W,a),t(n,E,a),k(E,vn),t(n,z,a),t(n,j,a),k(j,yn),t(n,O,a),t(n,w,a),k(w,bn),t(n,Q,a),t(n,P,a),k(P,dn),t(n,U,a),t(n,x,a),k(x,_n),t(n,X,a),t(n,F,a),k(F,Cn),t(n,Y,a),t(n,H,a),k(H,En),t(n,Z,a),t(n,M,a),k(M,jn),t(n,$,a),t(n,S,a),k(S,wn),t(n,h,a),t(n,L,a),k(L,Pn),t(n,g,a),t(n,G,a),k(G,xn),t(n,nn,a),t(n,I,a),k(I,Fn),t(n,sn,a),t(n,D,a),k(D,Hn),t(n,an,a),t(n,A,a),k(A,Mn),t(n,tn,a),t(n,K,a),k(K,Sn),t(n,pn,a),t(n,f,a),f.innerHTML=ts,t(n,on,a),t(n,q,a),k(q,Ln),t(n,en,a),t(n,m,a)},p:In,i:In,o:In,d(n){n&&s(r),n&&s(N),n&&s(v),n&&s(R),n&&s(y),n&&s(J),n&&s(b),n&&s(T),n&&s(d),n&&s(V),n&&s(_),n&&s(B),n&&s(C),n&&s(W),n&&s(E),n&&s(z),n&&s(j),n&&s(O),n&&s(w),n&&s(Q),n&&s(P),n&&s(U),n&&s(x),n&&s(X),n&&s(F),n&&s(Y),n&&s(H),n&&s(Z),n&&s(M),n&&s($),n&&s(S),n&&s(h),n&&s(L),n&&s(g),n&&s(G),n&&s(nn),n&&s(I),n&&s(sn),n&&s(D),n&&s(an),n&&s(A),n&&s(tn),n&&s(K),n&&s(pn),n&&s(f),n&&s(on),n&&s(q),n&&s(en),n&&s(m)}}}class ks extends os{constructor(r){super(),es(this,r,null,us,cs,{})}}export{ks as default};
